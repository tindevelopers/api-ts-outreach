version: '3.8'

services:
  # API Outreach Service
  api-outreach-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/outreach_api
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=development-jwt-secret-key
      - GROWCHIEF_ENDPOINT=http://growchief:8080
      - GROWCHIEF_API_KEY=demo-api-key
      - LOG_LEVEL=debug
      - CORS_ORIGIN=http://localhost:3000
    depends_on:
      - postgres
      - redis
      - growchief
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=outreach_api
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # GrowChief Service (Mock)
  growchief:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./docker/growchief-mock.conf:/etc/nginx/nginx.conf
      - ./docker/mock-responses:/usr/share/nginx/html
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
